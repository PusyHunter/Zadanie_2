name: GHAction example  

on:
  workflow_dispatch:
  push:
    branches: 
    - 'main'
    tags:
    - 'v*'
  pull_request:
    branches:
    - 'main'
  

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci_step:
    name: Build, tag and push Docker image to DockerHub
    runs-on: ubuntu-latest
      
    steps:
      - 
        name: Check out the source_repo
        uses: actions/checkout@v4
      
      -
        name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/example
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}   

      - 
        name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - 
        name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - 
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache 
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache  
          tags: ${{ steps.meta.outputs.tags }}

      - 
        name: Docker Scout
        id: docker-scout-cves
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ steps.meta.outputs.tags }}
          sarif-file: sarif.output.json
          only-severities: critical,high
          summary: true          
          to-latest: true
          ignore-base: true
          ignore-unchanged: true
          only-fixed: true
      
      - 
        name: Check for high and critical CVEs
        id: check-cves
        run: |
            if grep -q '"level": "high"\|"level": "critical"' sarif.output.json; then
              echo "Found high or critical CVEs."
              exit 1
            else
              echo "No high or critical CVEs found."
            fi
  
  build-and-push-image:
    runs-on: ubuntu-latest
        
    permissions:
      contents: read
      packages: write
      #attestations: write
       
        
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@main

      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: latest
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
        